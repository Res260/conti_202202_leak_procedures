0. See who works with the database (hosts and users from where they joined it): shell sqlcmd -S localhost -Q "select loginame, hostname from sys.sysprocesses"
1. Output to the cmd of all databases on the shell server: `sqlcmd.exe -S localhost -E -Q "SELECT name FROM master.dbo.sysdatabases;"`
with the size in megabytes: shell `sqlcmd -S localhost -E -Q "SELECT d.name, ROUND(SUM(mf.size) * 8 / 1024, 0) FROM sys.master_files mf INNER JOIN sys.databases d ON d.database_id = mf.database_id WHERE d.database_id > 4 GROUP BY d.name ORDER BY d.name ;"`
2. Unloading the 100 most saturated by the number of rows of tables in the database, the number of rows and the size of tables on the hard drive: `sqlcmd -S localhost -E -Q "USE %databasename% SELECT TOP 100 s.Name AS SchemaName, t.Name AS TableName, p.rows AS RowCounts, CAST(ROUND((SUM(a.total_pages) / 128.00), 2) AS NUMERIC(36, 2)) AS Total_MB FROM sys.tables t INNER JOIN sys.indexes i ON t.OBJECT_ID = i.object_id INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id INNER JOIN sys.allocation_units a ON p.partition_id = a.container_id INNER JOIN sys.schemas s ON t.schema_id = s.schema_id GRcfOUP BY t.Name , s.Name, p.Rows ORDER BY RowCounts desc, Total_MB desc;"`
2.1. `sqlcmd -S localhost -E -Q "USE %databasename% SELECT TOP 100 s.Name AS SchemaName, t.Name AS TableName, p.rows AS RowCounts, CAST(ROUND((SUM(a.total_pages) / 128.00), 2) AS NUMERIC(36, 2)) AS Total_MB FROM sys.tables t INNER JOIN sys.indexes i ON t.OBJECT_ID = i.object_id INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id INNER JOIN sys.allocation_units a ON p.partition_id = a.container_id INNER JOIN sys.schemas s ON t.schema_id = s.schema_id GROUP BY t.Name, s.Name, p.Rows ORDER BY RowCounts desc, Total_MB desc;"`
3. Counting rows in a specific table of a specific database: `sqlcmd -S localhost -E -Q "select count(*) from %databasename%.dbo.%tablename%;"`
4. Unloading the first 10 records in a specific table of a specific database: `sqlcmd -S localhost -E -Q "select top 10 * from %databasename%.dbo.%tablename%;"`
`sqlcmd -S localhost -E -Q "use %databasename%; select top 10 * from %tablename%" -W 5. Search by column names in a specific database using the example %pass% sqlcmd -S localhost -E -Q "select COLUMN_NAME as 'columnName', TABLE_NAME as 'TableName' from %databasename%.INFORMATION_SCHEMA.COLUMNS where COLUMN_NAME like '%pass%';"`
6. Uploading data of the contents of specific columns from a specific table to a txt file on a hard drive in a folder (in this example, by the numeric value of the table > dates: `sqlcmd.exe -S localhost -E -Q "select UserKey, EmailAddress, RealName, Phone, FirstName, LastName, countryName, CreatedDate from %databasename%.dbo.%tablename% where CreatedDate > '2017-11-30';" -W -s"|" -o"C:\temp\123.txt " FULL > sqlcmd.exe -S localhost -E -Q "select *from %databasename%.dbo.%tablename%" -W -s"|" -o "C:\Windows\Temp\1.txt "`
7. Output of all tables of a specific database: shell `sqlcmd -S localhost -E -Q "use %databasename%; exec sp_tables"`
-W for a remote/other local server, we change localhost to ip,port as an option - localhost,%port% (see netstat)
If the table or database is called from 2-3-4 words, then it is escaped like this [%databasename/tablename%] sqlcmd -E -S localhost -Q "BACKUP DATABASE databasename TO DISK='d:\adw.bak
